{"version":3,"file":"static/js/720.6c18db76.chunk.js","mappings":"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","sources":["components/Content/CyberCart.tsx","pages/Cart/Cart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { winSatte } from '../../redux/reducers';\nimport { setCart } from '../../redux/reducers/searchReducer';\nimport axios from 'axios';\nimport './CyberCart.scss';\n\ndocument.title = 'CYBERBALENCIAGA' + '   ' + 'CART';\n\nconst prerenderArray = [\n  {\n    value: 'Cyber fighter gloves',\n    id: '99999999',\n    link: 'https://raw.githubusercontent.com/AlexMalFrost/CYBERBALENCIAGA/cyber-balenciaga-files/goods/strangemask.png',\n    price: 99999,\n    test: 'dresses',\n    category: 'dress',\n  },\n];\nconst NotFound = [\n  {\n    value: 'Cyber fighter gloves',\n    id: '99999998',\n    link: 'https://raw.githubusercontent.com/AlexMalFrost/CYBERBALENCIAGA/cyber-balenciaga-files/goods/strangemask.png',\n    price: 10101,\n    test: 'dresses',\n    category: 'dress',\n  },\n];\ntype cartItem = {\n  id: string;\n};\n\ntype cartValue = {\n  count: number;\n  id: string;\n}[];\n\ntype cartContent = {\n  value: string;\n  link: string;\n  price: number;\n  category: string;\n  id: string;\n};\n\ntype cartContents = cartContent[];\n\ntype cartContentItem = {\n  item: cartContent;\n  datavalue: number;\n};\n\nconst CyberCart: React.FC = () => {\n  const [cartContent, setCartContent] = React.useState<cartContents>(prerenderArray);\n\n  const dispatch = useDispatch();\n  const windowSize = useSelector((state: winSatte) => state.windowsize.value);\n  const cartItems = useSelector((state: winSatte) => state.searchslice.cartvalue);\n\n  React.useEffect(() => {\n    async function fetchPizza() {\n      try {\n        const { data } = await axios.get(`https://6429b940ebb1476fcc4f9b86.mockapi.io/items`);\n        if (data.length > 0 && Object.keys(cartItems).length > 0) {\n          const myArrayFiltered = data.filter((el: cartContent) => {\n            return cartItems.some((f: cartItem) => {\n              return f.id == el.id;\n            });\n          });\n          setCartContent(myArrayFiltered);\n        } else if (data.length === 0 && Object.keys(cartItems).length > 0) {\n          document.title = 'CYBERBALENCIAGA NOT FOUND';\n          setCartContent(NotFound);\n        } else {\n          document.title = 'CYBERBALENCIAGA NOT FOUND';\n          setCartContent(prerenderArray);\n        }\n      } catch (error) {\n        alert('Ошибка при получении данных!');\n      }\n    }\n\n    fetchPizza();\n  }, [cartItems]);\n\n  const itemCarts: cartValue =\n    Object.keys(cartItems).length > 0\n      ? [\n          ...cartItems\n            .reduce((mp, o) => {\n              if (!mp.has(o.id)) mp.set(o.id, { ...o, count: 0 });\n              mp.get(o.id).count++;\n              return mp;\n            }, new Map())\n            .values(),\n        ]\n      : prerenderArray;\n\n  const removeCartItem = ({ item, datavalue }: cartContentItem) => {\n    if (datavalue > 1) {\n      const indexCart = cartItems.findIndex(({ id }) => id === item.id);\n      const delitItemCart = cartItems.filter((_, i) => i !== indexCart);\n      dispatch(setCart(delitItemCart));\n    }\n  };\n\n  const removeCartPosition = (item: cartContent) => {\n    if (Object.keys(cartItems).length > 0) {\n      const removethisposition = cartItems.filter((i) => i.id !== item.id);\n      const removeposition = cartContent.filter((i) => i.id !== item.id);\n      const filteredCartItem = removeposition.filter(\n        (ele, ind) => ind === removeposition.findIndex((elem) => elem.id === ele.id),\n      );\n      const middledata =\n        Object.keys(filteredCartItem).length > 0 ? filteredCartItem : prerenderArray;\n      dispatch(setCart(removethisposition));\n      setCartContent(middledata);\n    }\n  };\n\n  const renderItemCartNumber = (item: cartContent) => {\n    for (let i = 0; i < Object.keys(cartItems).length; i++) {\n      if (item.id === itemCarts[i].id) {\n        const datavalue = itemCarts[i].count;\n        return (\n          <div className=\"cart_block\">\n            <div className=\"cart_value\">{item.value}</div>\n            <div className=\"cart_button_box\">\n              <div className=\"cart_button\">\n                <div className=\"cart_sign\" onClick={() => removeCartItem({ item, datavalue })}>\n                  -\n                </div>\n              </div>\n              <div className=\"cart_value\">{itemCarts[i].count}</div>\n              <div className=\"cart_button\">\n                <div\n                  className=\"cart_sign\"\n                  onClick={() => dispatch(setCart([...cartItems, { id: item.id }]))}>\n                  +\n                </div>\n              </div>\n              <div className=\"cart_value\"> {item.price * itemCarts[i].count} $</div>\n            </div>\n            <div className=\"cart_remove\">\n              <div className=\"cart_remove_remove\" onClick={() => removeCartPosition(item)}>\n                Remove\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n\n  const renderSkeleton = () => {\n    if (cartContent[0].price === prerenderArray[0].price) {\n      return (\n        <>\n          <div className=\"emptycart\">Cart is empty</div>\n        </>\n      );\n    } else if (cartContent[0].price === NotFound[0].price) {\n      return (\n        <>\n          <div className=\"emptycart\">Data not found</div>\n        </>\n      );\n    }\n    return (\n      <div className=\"notfound\">\n        <div className=\"notfound_text\">Data not found</div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className={windowSize ? 'cartGrid_blur' : 'cartGrid'}>\n        <div className=\"cart_content\">\n          {cartContent[0].id === prerenderArray[0].id\n            ? renderSkeleton()\n            : cartContent.map((item: cartContent) => (\n                <div key={item.id} className=\"cart_item\">\n                  <div className=\"cart_picture_box\">\n                    <img className=\"cart_picture\" src={item.link} alt=\"Link\" />\n                  </div>\n                  {renderItemCartNumber(item)}\n                </div>\n              ))}\n        </div>\n        {cartContent[0].id === '99999999' ? (\n          <div></div>\n        ) : (\n          <div className=\"cart_buybar\">\n            <div className=\"cart_buybar_buy\">Buy</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CyberCart;\n","import React from 'react';\nimport NavBar from '../../components/Header/NavBar/NavBar';\nimport Menu from '../../components/Header/Menu/Menu';\nimport FooterMain from '../../components/Footer/FooterMain';\nimport Searchinput from '../../components/Uikit/SearchInput';\nimport CyberCart from '../../components/Content/CyberCart';\n\nconst Cart: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <header>\n        <NavBar />\n        <Menu />\n        <Searchinput />\n      </header>\n      <main>\n        <CyberCart />\n      </main>\n      <footer>\n        <div className=\"choseFooter\">\n          <FooterMain />\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Cart;\n"],"names":["document","title","prerenderArray","value","id","link","price","test","category","NotFound","CyberCart","cartContent","setCartContent","React","dispatch","useDispatch","windowSize","useSelector","state","windowsize","cartItems","searchslice","cartvalue","async","data","axios","length","Object","keys","myArrayFiltered","filter","el","some","f","error","alert","fetchPizza","itemCarts","reduce","mp","o","has","set","count","get","Map","values","removeCartItem","_ref","item","datavalue","indexCart","findIndex","_ref2","delitItemCart","_","i","setCart","removeCartPosition","removethisposition","removeposition","filteredCartItem","ele","ind","elem","middledata","renderItemCartNumber","_jsxs","className","children","_jsx","onClick","_Fragment","map","src","alt","Cart","NavBar","Menu","Searchinput","FooterMain"],"sourceRoot":""}