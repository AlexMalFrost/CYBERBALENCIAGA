{"version":3,"file":"static/js/631.be1e01eb.chunk.js","mappings":"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","sources":["components/Uikit/SkeletonGoods.tsx","components/Content/CyberItem.tsx","pages/Item/Item.tsx"],"sourcesContent":["import React from 'react';\r\nimport './spinLoader.scss';\r\n\r\nconst SkeletonGoods: React.FC = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"ring\"></div>\r\n      <span className=\"skeletongoods\">loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkeletonGoods;\r\n","import './CyberItem.scss';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { winSatte } from '../../redux/reducers';\r\nimport axios from 'axios';\r\nimport SkeletonGoods from '../Uikit/SkeletonGoods';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\ntype dressesContent = {\r\n  value: string;\r\n  link: string;\r\n  price: number;\r\n  category: string;\r\n  id: string;\r\n}[];\r\n\r\nconst prerenderArray: dressesContent = [\r\n  {\r\n    value: 'Cyber fighter gloves',\r\n    link: 'https://raw.githubusercontent.com/AlexMalFrost/CYBERBALENCIAGA/cyber-balenciaga-files/goods/strangemask.png',\r\n    price: 99,\r\n    category: 'dress',\r\n    id: '000000',\r\n  },\r\n];\r\nconst CyberItem = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [itemContent, setItemContent] = React.useState<dressesContent>(prerenderArray);\r\n  const searchItem = useSelector((state: winSatte) => state.itemslice.value);\r\n  const windowSize = useSelector((state: winSatte) => state.windowsize.value);\r\n\r\n  console.log(searchItem);\r\n\r\n  React.useEffect(() => {\r\n    async function fetchPizza() {\r\n      try {\r\n        const searchh = searchItem ? `id=${searchItem}` : prerenderArray[0].id;\r\n        const { data } = await axios.get(\r\n          `https://6429b940ebb1476fcc4f9b86.mockapi.io/items?${searchh}`,\r\n        );\r\n        if (data.length > 0 && data !== itemContent) {\r\n          setItemContent(data);\r\n        } else {\r\n          setItemContent(prerenderArray);\r\n        }\r\n      } catch (error) {\r\n        alert('Ошибка при получении данных!');\r\n      }\r\n    }\r\n\r\n    fetchPizza();\r\n  }, [searchItem]);\r\n\r\n  React.useEffect(() => {\r\n    if (searchItem !== searchParams.get('ItemContent')) {\r\n      const ItemContent = itemContent[0].id;\r\n      setSearchParams({ ItemContent });\r\n    }\r\n  }, [itemContent]);\r\n\r\n  const renderItem = (item: any) => {\r\n    if (item.price * 2 > 35) {\r\n      return (\r\n        <>\r\n          <div className=\"item_price\">\r\n            <div className=\"item_price_now\">Buy now for&nbsp;</div>\r\n            <div className=\"item_price_now_through\"> {item.price * 2}$</div>\r\n            <div className=\"item_price_now\"> &nbsp;&nbsp;{item.price}$</div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"item_price\">\r\n          <div className=\"item_price_now\">Buy now for</div>\r\n          <div className=\"item_price_now\"> &nbsp;{item.price}$</div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderSkeleton = () => {\r\n    if (itemContent.length === prerenderArray.length) {\r\n      return (\r\n        <>\r\n          <div>\r\n            <SkeletonGoods />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"notfound\">\r\n        <div className=\"notfound_text\">Data not found</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={windowSize ? 'goodsGrid_blur' : 'item'}>\r\n        {itemContent[0].id === prerenderArray[0].id\r\n          ? renderSkeleton()\r\n          : itemContent.map((item: any) => (\r\n              <div className=\"item_content\" key={item.id}>\r\n                <img className=\"item_picture\" src={item.link} alt=\"Link\" />\r\n                <div className=\"item_box\">\r\n                  {renderItem(item)}\r\n                  <div className=\"item_name\">{item.value}</div>\r\n                  <div className=\"item_text\">\r\n                    <div className=\"item_text_center\">\r\n                      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nemo deserunt\r\n                      sapiente quidem amet delectus consequatur minima expedita. Quod, minima.\r\n                      Placeat assumenda molestiae temporibus a. Ipsam ipsum fugit totam quis itaque!\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item_check_also\">Check also ...</div>\r\n                  <div className=\"item_also\">\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                    <img className=\"item_picture_also\" src={item.link} alt=\"Link\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CyberItem;\r\n","import NavBar from '../../components/Header/NavBar/NavBar';\r\nimport Menu from '../../components/Header/Menu/Menu';\r\nimport CyberItem from '../../components/Content/CyberItem';\r\nimport FooterMain from '../../components/Footer/FooterMain';\r\nimport Searchinput from '../../components/Uikit/SearchInput';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <NavBar />\r\n        <Menu />\r\n        <Searchinput />\r\n      </header>\r\n      <main>\r\n        <CyberItem />\r\n      </main>\r\n      <footer>\r\n        <div className=\"choseFooter\">\r\n          <FooterMain />\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["_jsxs","className","children","_jsx","prerenderArray","value","link","price","category","id","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_React$useState","React","_React$useState2","itemContent","setItemContent","searchItem","useSelector","state","itemslice","windowSize","windowsize","console","log","_fetchPizza","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchh","_yield$axios$get","data","wrap","_context","prev","next","concat","axios","sent","length","t0","alert","stop","apply","arguments","fetchPizza","get","ItemContent","renderItem","item","_Fragment","SkeletonGoods","map","src","alt","NavBar","Menu","Searchinput","CyberItem","FooterMain"],"sourceRoot":""}